<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeun.mapper.BoardMapper">

	<resultMap id="PostMapping" type="com.jeun.domain.BoardVO">
		<id column="id" property="id" />
		<result column="title" property="title" jdbcType="VARCHAR"
			javaType="String" />
			
		<result column="content" property="content" jdbcType="LONGVARCHAR"
			javaType="String" />

		<result column="author" property="author" jdbcType="VARCHAR"
			javaType="String" />
			
		<result column="date_prop" property="dateProp" jdbcType="DATE"
			javaType="DATE" />
		
		<result column="reg_date" property="regDate"
			jdbcType="TIMESTAMP" javaType="Date" />
			
		<result column="update_date" property="updateDate"
			jdbcType="TIMESTAMP" javaType="Date" />
			
	</resultMap>
	
	<select id="getTotCnt" resultType="int">
			SELECT FOUND_ROWS()
	</select>

	<select id="getPostList" resultMap="PostMapping">
			select
			 SQL_CALC_FOUND_ROWS * FROM
			posts
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.jeun.domain.BoardVO">
		insert
		into posts (title,content,author,date_prop)
		values
		(#{title},#{content},#{author},#{dateProp})
	</insert>


	<select id="searchPostId" resultMap="PostMapping">
		select * FROM posts
		where id= #{id}
	</select>


	<update id="update">
		update posts
		set title =#{title},
			content =#{content},
			date_prop =#{dateProp},
			update_date = now()
			where id = #{id}
	</update>

	<delete id="delete">
		delete from posts
		where id = #{id}
	</delete>
	
	<!-- Pagingmapperxml mariadb query-->
	
	<select id="getListWithPaging" resultMap="PostMapping">
		SELECT SQL_CALC_FOUND_ROWS * 
			FROM posts
			LIMIT #{offset}, #{amount}
	</select>
	
	<select id="getListWithPagingBySearch" resultMap="PostMapping">
		SELECT SQL_CALC_FOUND_ROWS p.* 
		 FROM tbl_tag t ,rel_single_tag r ,posts p
			WHERE t.word in
			<trim prefix="(" suffix=")">
				<foreach collection="list" item="tag" separator=", ">
					#{tag.word}
				</foreach>
			</trim>
		and t.id = r.tag_id
		and r.single_id = p.id
		limit
		#{cri.offset},#{cri.amount}
	</select>
	
	
	<!-- public int insertTagRel(@Param("objId") int objId ,@Param("tags") List<TagVO> 
		list ); -->
	<insert id="insertTagRel">
		insert into rel_single_tag (single_id, tag_id)
		values
		<foreach collection="tags" item="tag" separator=" , ">
			(#{objId}
			,#{tag.id})
		</foreach>
		;
	</insert>


</mapper>